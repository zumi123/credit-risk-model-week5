{"version":3,"file":"static/js/4461.86693416.chunk.js","mappings":"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","sources":["common/utils/withErrorBoundary.tsx","common/utils/withRouterNext.tsx","common/components/error-boundaries/SectionErrorBoundary.tsx","../node_modules/react-error-boundary/dist/src/ErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/ErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/assertErrorBoundaryContext.ts","../node_modules/react-error-boundary/dist/src/useErrorBoundary.ts","../node_modules/react-error-boundary/dist/src/withErrorBoundary.ts","shared/building_blocks/PreviewBadge.tsx","common/components/PageContainer.tsx","common/components/RequestStateWrapper.tsx","common/utils/ErrorUtils.tsx","experiment-tracking/components/NotFoundPage.tsx","shared/building_blocks/PageHeader.tsx","experiment-tracking/components/MetricView.tsx","experiment-tracking/components/MetricPage.tsx","common/components/Spinner.tsx"],"sourcesContent":["import React from 'react';\nimport { ErrorBoundary, ErrorBoundaryPropsWithComponent, FallbackProps } from 'react-error-boundary';\nimport ErrorUtils from './ErrorUtils';\nimport { DangerIcon, Empty } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\n\nexport type ErrorBoundaryProps = {\n  children: React.Component;\n  customFallbackComponent?: ErrorBoundaryPropsWithComponent['FallbackComponent'];\n};\n\nfunction ErrorFallback() {\n  return (\n    <Empty\n      data-testid=\"fallback\"\n      title={<FormattedMessage defaultMessage=\"Error\" description=\"Title of editor error fallback component\" />}\n      description={\n        <FormattedMessage\n          defaultMessage=\"An error occurred while rendering this component.\"\n          description=\"Description of error fallback component\"\n        />\n      }\n      image={<DangerIcon />}\n    />\n  );\n}\n\nfunction CustomErrorBoundary({ children, customFallbackComponent }: React.PropsWithChildren<ErrorBoundaryProps>) {\n  function logErrorToConsole(error: Error, info: { componentStack: string }) {\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error('Caught Unexpected Error: ', error, info.componentStack);\n  }\n\n  if (customFallbackComponent) {\n    return (\n      <ErrorBoundary onError={logErrorToConsole} FallbackComponent={customFallbackComponent}>\n        {children}\n      </ErrorBoundary>\n    );\n  }\n\n  return (\n    <ErrorBoundary onError={logErrorToConsole} fallback={<ErrorFallback />}>\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function withErrorBoundary<P>(\n  service: string,\n  Component: React.ComponentType<P>,\n  errorMessage?: React.ReactNode,\n  customFallbackComponent?: React.ComponentType<FallbackProps>,\n): React.ComponentType<P> {\n  return function CustomErrorBoundaryWrapper(props: P) {\n    return (\n      <CustomErrorBoundary customFallbackComponent={customFallbackComponent}>\n        {/* @ts-expect-error Generics don't play well with WithConditionalCSSProp type coming @emotion/react jsx typing to validate css= prop values typing. More details here: emotion-js/emotion#2169 */}\n        <Component {...props} />\n      </CustomErrorBoundary>\n    );\n  };\n}\n","import React from 'react';\n\nimport {\n  type Location,\n  type Params as RouterDOMParams,\n  type NavigateOptions,\n  type To,\n  useLocation,\n  useNavigate,\n  useParams,\n} from './RoutingUtils';\n\nexport interface WithRouterNextProps<Params extends RouterDOMParams = RouterDOMParams> {\n  navigate: ReturnType<typeof useNavigate>;\n  location: Location;\n  params: Params;\n}\n\n/**\n * This HoC serves as a retrofit for class components enabling them to use\n * react-router v6's location, navigate and params being injected via props.\n */\nexport const withRouterNext =\n  <\n    T,\n    Props extends JSX.IntrinsicAttributes &\n      JSX.LibraryManagedAttributes<React.ComponentType<T>, React.PropsWithChildren<T>>,\n    Params extends RouterDOMParams = RouterDOMParams,\n  >(\n    Component: React.ComponentType<T>,\n  ) =>\n  (\n    props: Omit<\n      Props,\n      | 'location'\n      | 'navigate'\n      | 'params'\n      | 'navigationType'\n      /* prettier-ignore*/\n    >,\n  ) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams<Params>();\n\n    return (\n      <Component\n        /* prettier-ignore */\n        params={params as Params}\n        location={location}\n        navigate={navigate}\n        {...(props as Props)}\n      />\n    );\n  };\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport Utils from '../../utils/Utils';\n\ntype Props = {\n  showServerError?: boolean;\n};\n\ntype State = any;\n\nexport class SectionErrorBoundary extends React.Component<Props, State> {\n  state = { error: null };\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n    console.error(error, errorInfo);\n  }\n\n  renderErrorMessage(error: any) {\n    return this.props.showServerError ? <div>Error message: {error.message}</div> : '';\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return (\n        <div>\n          <p>\n            <i data-testid=\"icon-fail\" className=\"fa fa-exclamation-triangle icon-fail\" css={classNames.wrapper} />\n            <span> Something went wrong with this section. </span>\n            <span>If this error persists, please report an issue </span>\n            {/* Reported during ESLint upgrade */}\n            {/* eslint-disable-next-line react/jsx-no-target-blank */}\n            <a href={Utils.getSupportPageUrl()} target=\"_blank\">\n              here\n            </a>\n            .{this.renderErrorMessage(error)}\n          </p>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\nconst classNames = {\n  wrapper: {\n    marginLeft: -2, // to align the failure icon with the collapsable section caret toggle\n  },\n};\n","import { createContext } from \"react\";\n\nexport type ErrorBoundaryContextType = {\n  didCatch: boolean;\n  error: any;\n  resetErrorBoundary: (...args: any[]) => void;\n};\n\nexport const ErrorBoundaryContext =\n  createContext<ErrorBoundaryContextType | null>(null);\n","import {\n  Component,\n  createElement,\n  ErrorInfo,\n  isValidElement,\n  PropsWithChildren,\n  PropsWithRef,\n  ReactElement,\n} from \"react\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\nimport { ErrorBoundaryProps, FallbackProps } from \"./types\";\n\ntype ErrorBoundaryState = { didCatch: boolean; error: any };\n\nconst initialState: ErrorBoundaryState = {\n  didCatch: false,\n  error: null,\n};\n\nexport class ErrorBoundary extends Component<\n  PropsWithRef<PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  state = initialState;\n\n  static getDerivedStateFromError(error: Error) {\n    return { didCatch: true, error };\n  }\n\n  resetErrorBoundary = (...args: any[]) => {\n    const { error } = this.state;\n\n    if (error !== null) {\n      this.props.onReset?.({\n        args,\n        reason: \"imperative-api\",\n      });\n\n      this.setState(initialState);\n    }\n  };\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.props.onError?.(error, info);\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState\n  ) {\n    const { didCatch } = this.state;\n    const { resetKeys } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (\n      didCatch &&\n      prevState.error !== null &&\n      hasArrayChanged(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onReset?.({\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\",\n      });\n\n      this.setState(initialState);\n    }\n  }\n\n  render() {\n    const { children, fallbackRender, FallbackComponent, fallback } =\n      this.props;\n    const { didCatch, error } = this.state;\n\n    let childToRender = children;\n\n    if (didCatch) {\n      const props: FallbackProps = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      };\n\n      if (isValidElement(fallback)) {\n        childToRender = fallback;\n      } else if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else {\n        throw new Error(\n          \"react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop\"\n        );\n      }\n    }\n\n    return createElement(\n      ErrorBoundaryContext.Provider,\n      {\n        value: {\n          didCatch,\n          error,\n          resetErrorBoundary: this.resetErrorBoundary,\n        },\n      },\n      childToRender\n    ) as ReactElement;\n  }\n}\n\nfunction hasArrayChanged(a: any[] = [], b: any[] = []) {\n  return (\n    a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n  );\n}\n","import { ErrorBoundaryContextType } from \"./ErrorBoundaryContext\";\n\nexport function assertErrorBoundaryContext(\n  value: any\n): value is ErrorBoundaryContextType {\n  if (\n    value == null ||\n    typeof value.didCatch !== \"boolean\" ||\n    typeof value.resetErrorBoundary !== \"function\"\n  ) {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n\n  return true;\n}\n","import { useContext, useMemo, useState } from \"react\";\nimport { assertErrorBoundaryContext } from \"./assertErrorBoundaryContext\";\nimport { ErrorBoundaryContext } from \"./ErrorBoundaryContext\";\n\nexport type UseErrorBoundaryApi<Error> = {\n  resetBoundary: () => void;\n  showBoundary: (error: Error) => void;\n};\n\nexport function useErrorBoundary<Error = any>(): UseErrorBoundaryApi<Error> {\n  const context = useContext(ErrorBoundaryContext);\n\n  assertErrorBoundaryContext(context);\n\n  const [state, setState] = useState<{\n    error: Error | null;\n    hasError: boolean;\n  }>({\n    error: null,\n    hasError: false,\n  });\n\n  const memoized = useMemo(\n    () => ({\n      resetBoundary: () => {\n        context?.resetErrorBoundary();\n        setState({ error: null, hasError: false });\n      },\n      showBoundary: (error: Error) =>\n        setState({\n          error,\n          hasError: true,\n        }),\n    }),\n    [context?.resetErrorBoundary]\n  );\n\n  if (state.hasError) {\n    throw state.error;\n  }\n\n  return memoized;\n}\n","import { ComponentType, createElement } from \"react\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { ErrorBoundaryProps } from \"./types\";\n\nexport function withErrorBoundary<Props extends Object>(\n  Component: ComponentType<Props>,\n  errorBoundaryProps: ErrorBoundaryProps\n): ComponentType<Props> {\n  const Wrapped: ComponentType<Props> = (props: Props) => {\n    return createElement(\n      ErrorBoundary,\n      errorBoundaryProps,\n      createElement(Component, props)\n    );\n  };\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || \"Unknown\";\n  Wrapped.displayName = `withErrorBoundary(${name})`;\n\n  return Wrapped;\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Tag, useDesignSystemTheme } from '@databricks/design-system';\nexport const PreviewBadge = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_shared_building_blocks_previewbadge.tsx_14\"\n      className={className}\n      css={{ marginLeft: theme.spacing.xs }}\n      color=\"turquoise\"\n    >\n      <FormattedMessage\n        defaultMessage=\"Experimental\"\n        description=\"Experimental badge shown for features which are experimental\"\n      />\n    </Tag>\n  );\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: 'calc(100% - 60px)', // 60px comes from header height\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport './RequestStateWrapper.css';\nimport { connect } from 'react-redux';\nimport { getApis } from '../../experiment-tracking/reducers/Reducers';\nimport { Spinner } from './Spinner';\nimport { ErrorCodes } from '../constants';\nimport { ErrorWrapper } from '../utils/ErrorWrapper';\nimport { ReduxState } from '../../redux-types';\n\nexport const DEFAULT_ERROR_MESSAGE = 'A request error occurred.';\n\ntype RequestStateWrapperProps = {\n  children?: React.ReactNode;\n  customSpinner?: React.ReactNode;\n  shouldOptimisticallyRender?: boolean;\n  requests: any[];\n  requestIds?: string[];\n  requestIdsWith404sToIgnore?: string[];\n  description?: any; // TODO: PropTypes.oneOf(Object.values(LoadingDescription))\n  permissionDeniedView?: React.ReactNode;\n  suppressErrorThrow?: boolean;\n  customRequestErrorHandlerFn?: (\n    failedRequests: {\n      id: string;\n      active?: boolean;\n      error: Error | ErrorWrapper;\n    }[],\n  ) => void;\n};\n\ntype RequestStateWrapperState = any;\n\nexport class RequestStateWrapper extends Component<RequestStateWrapperProps, RequestStateWrapperState> {\n  static defaultProps = {\n    requests: [],\n    requestIdsWith404sToIgnore: [],\n    shouldOptimisticallyRender: false,\n  };\n\n  state = {\n    shouldRender: false,\n    shouldRenderError: false,\n  };\n\n  static getErrorRequests(requests: any, requestIdsWith404sToIgnore: any) {\n    return requests.filter((r: any) => {\n      if (r.error !== undefined) {\n        return !(\n          requestIdsWith404sToIgnore &&\n          requestIdsWith404sToIgnore.includes(r.id) &&\n          r.error.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n        );\n      }\n      return false;\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps: any) {\n    const shouldRender = nextProps.requests.length\n      ? nextProps.requests.every((r: any) => r && r.active === false)\n      : false;\n\n    const requestErrors = RequestStateWrapper.getErrorRequests(\n      nextProps.requests,\n      nextProps.requestIdsWith404sToIgnore,\n    );\n\n    return {\n      shouldRender,\n      shouldRenderError: requestErrors.length > 0,\n      requestErrors,\n    };\n  }\n\n  getRenderedContent() {\n    const { children, requests, customSpinner, permissionDeniedView, suppressErrorThrow, customRequestErrorHandlerFn } =\n      this.props;\n    // @ts-expect-error TS(2339): Property 'requestErrors' does not exist on type '{... Remove this comment to see the full error message\n    const { shouldRender, shouldRenderError, requestErrors } = this.state;\n    const permissionDeniedErrors = requestErrors.filter((failedRequest: any) => {\n      return failedRequest.error.getErrorCode() === ErrorCodes.PERMISSION_DENIED;\n    });\n\n    if (typeof children === 'function') {\n      return children(!shouldRender, shouldRenderError, requests, requestErrors);\n    } else if (shouldRender || shouldRenderError || this.props.shouldOptimisticallyRender) {\n      if (permissionDeniedErrors.length > 0 && permissionDeniedView) {\n        return permissionDeniedView;\n      }\n      if (shouldRenderError && !suppressErrorThrow) {\n        customRequestErrorHandlerFn ? customRequestErrorHandlerFn(requestErrors) : triggerError(requestErrors);\n      }\n\n      return children;\n    }\n\n    return customSpinner || <Spinner />;\n  }\n\n  render() {\n    return this.getRenderedContent();\n  }\n}\n\nexport const triggerError = (requests: any) => {\n  // This triggers the OOPS error boundary.\n  // eslint-disable-next-line no-console -- TODO(FEINF-3587)\n  console.error('ERROR', requests);\n  throw Error(`${DEFAULT_ERROR_MESSAGE}: ${requests.error}`);\n};\n\nconst mapStateToProps = (state: ReduxState, ownProps: Omit<RequestStateWrapperProps, 'requests'>) => ({\n  requests: getApis(ownProps.requestIds, state),\n});\n\nexport default connect(mapStateToProps)(RequestStateWrapper);\n","import React from 'react';\nimport { BadRequestError, InternalServerError, NotFoundError, PermissionError } from '@databricks/web-shared/errors';\nimport { ErrorWrapper } from './ErrorWrapper';\nimport { ErrorCodes } from '../constants';\n\nclass ErrorUtils {\n  static mlflowServices = {\n    MODEL_REGISTRY: 'Model Registry',\n    EXPERIMENTS: 'Experiments',\n    MODEL_SERVING: 'Model Serving',\n    RUN_TRACKING: 'Run Tracking',\n  };\n}\n\n/**\n * Maps known types of ErrorWrapper (legacy) to platform's predefined error instances.\n */\nexport const mapErrorWrapperToPredefinedError = (errorWrapper: ErrorWrapper, requestId?: string) => {\n  if (!(errorWrapper instanceof ErrorWrapper)) {\n    return undefined;\n  }\n  const { status } = errorWrapper;\n  let error: Error | undefined = undefined;\n  const networkErrorDetails = { status };\n  if (errorWrapper.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST) {\n    error = new NotFoundError(networkErrorDetails);\n  }\n  if (errorWrapper.getErrorCode() === ErrorCodes.PERMISSION_DENIED) {\n    error = new PermissionError(networkErrorDetails);\n  }\n  if (errorWrapper.getErrorCode() === ErrorCodes.INTERNAL_ERROR) {\n    error = new InternalServerError(networkErrorDetails);\n  }\n  if (errorWrapper.getErrorCode() === ErrorCodes.INVALID_PARAMETER_VALUE) {\n    error = new BadRequestError(networkErrorDetails);\n  }\n\n  // Attempt to extract message from error wrapper and assign it to the error instance.\n  const messageFromErrorWrapper = errorWrapper.getMessageField();\n  if (error && messageFromErrorWrapper) {\n    error.message = messageFromErrorWrapper;\n  }\n\n  return error;\n};\nexport default ErrorUtils;\n","import React, { Component } from 'react';\n\nclass NotFoundPage extends Component {\n  render() {\n    return <div>Resource not found.</div>;\n  }\n}\n\nexport default NotFoundPage;\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport {\n  Breadcrumb,\n  Button,\n  Spacer,\n  Dropdown,\n  Menu,\n  Header,\n  OverflowIcon,\n  useDesignSystemTheme,\n  type HeaderProps,\n} from '@databricks/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PreviewBadge } from './PreviewBadge';\n\ntype OverflowMenuProps = {\n  menu?: {\n    id: string;\n    itemName: React.ReactNode;\n    onClick?: (...args: any[]) => any;\n    href?: string;\n  }[];\n};\n\nexport function OverflowMenu({ menu }: OverflowMenuProps) {\n  const overflowMenu = (\n    <Menu>\n      {/* @ts-expect-error TS(2532): Object is possibly 'undefined'. */}\n      {menu.map(({ id, itemName, onClick, href, ...otherProps }) => (\n        // @ts-expect-error TS(2769): No overload matches this call.\n        <Menu.Item key={id} onClick={onClick} href={href} data-test-id={id} {...otherProps}>\n          {itemName}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n  return menu.length > 0 ? (\n    <Dropdown overlay={overflowMenu} trigger={['click']} placement=\"bottomLeft\" arrow>\n      <Button\n        componentId=\"codegen_mlflow_app_src_shared_building_blocks_pageheader.tsx_54\"\n        icon={<OverflowIcon />}\n        data-test-id=\"overflow-menu-trigger\"\n        aria-label=\"Open header dropdown menu\"\n      />\n    </Dropdown>\n  ) : null;\n}\n\ntype PageHeaderProps = Pick<HeaderProps, 'dangerouslyAppendEmotionCSS'> & {\n  title: React.ReactNode;\n  breadcrumbs?: React.ReactNode[];\n  preview?: boolean;\n  feedbackOrigin?: string;\n  infoPopover?: React.ReactNode;\n  children?: React.ReactNode;\n  spacerSize?: 'xs' | 'sm' | 'md' | 'lg';\n  hideSpacer?: boolean;\n  titleAddOns?: React.ReactNode | React.ReactNode[];\n};\n\n/**\n * A page header that includes:\n *   - title,\n *   - optional breadcrumb content,\n *   - optional preview mark,\n *   - optional feedback origin: shows the \"Send feedback\" button when not empty, and\n *   - optional info popover, safe to have link inside.\n */\nexport function PageHeader(props: PageHeaderProps) {\n  const {\n    title, // required\n    breadcrumbs = [],\n    titleAddOns = [],\n    preview,\n    children,\n    spacerSize,\n    hideSpacer = false,\n    dangerouslyAppendEmotionCSS,\n  } = props;\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n\n  return (\n    <>\n      <Header\n        breadcrumbs={\n          breadcrumbs.length > 0 && (\n            <Breadcrumb includeTrailingCaret>\n              {breadcrumbs.map((b, i) => (\n                <Breadcrumb.Item key={i}>{b}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )\n        }\n        buttons={children}\n        title={title}\n        // prettier-ignore\n        titleAddOns={\n          <>\n            {preview && <PreviewBadge css={{ marginLeft: 0 }} />}\n            {titleAddOns}\n          </>\n        }\n        dangerouslyAppendEmotionCSS={dangerouslyAppendEmotionCSS}\n      />\n      <Spacer\n        // @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message\n        css={{\n          // Ensure spacer's fixed height\n          flexShrink: 0,\n          ...(hideSpacer ? { display: 'none' } : {}),\n        }}\n        size={spacerSize}\n      />\n    </>\n  );\n}\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Utils from '../../common/utils/Utils';\nimport './MetricView.css';\nimport { getExperiment, getRunInfo } from '../reducers/Reducers';\nimport MetricsPlotPanel from './MetricsPlotPanel';\nimport { Link } from '../../common/utils/RoutingUtils';\nimport type { Location } from '../../common/utils/RoutingUtils';\nimport { PageHeader } from '../../shared/building_blocks/PageHeader';\nimport Routes from '../routes';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\n\ntype MetricViewImplProps = {\n  experiments: any[]; // TODO: PropTypes.instanceOf(Experiment)\n  experimentIds: string[];\n  comparedExperimentIds?: string[];\n  hasComparedExperimentsBefore?: boolean;\n  runUuids: string[];\n  runNames: string[];\n  metricKey: string;\n  location: Location;\n};\n\nexport class MetricViewImpl extends Component<MetricViewImplProps> {\n  getCompareRunsPageText(numRuns: any, numExperiments: any) {\n    return numExperiments > 1 ? (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb title for compare runs page with multiple experiments\"\n        values={{ numRuns, numExperiments }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage=\"Comparing {numRuns} Runs from 1 Experiment\"\n        description=\"Breadcrumb title for compare runs page with single experiment\"\n        values={{ numRuns }}\n      />\n    );\n  }\n\n  hasMultipleExperiments() {\n    return this.props.experimentIds.length > 1;\n  }\n\n  getRunPageLink() {\n    const { experimentIds, runUuids, runNames } = this.props;\n\n    if (!runUuids || runUuids.length === 0) {\n      return null;\n    }\n\n    if (runUuids.length === 1) {\n      return <Link to={Routes.getRunPageRoute(experimentIds[0], runUuids[0])}>{runNames[0]}</Link>;\n    }\n\n    const text = this.getCompareRunsPageText(runUuids.length, experimentIds.length);\n    return <Link to={Routes.getCompareRunPageRoute(runUuids, experimentIds)}>{text}</Link>;\n  }\n\n  getCompareExperimentsPageLinkText(numExperiments: any) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n        // eslint-disable-next-line max-len\n        description=\"Breadcrumb nav item to link to the compare-experiments page on compare runs page\"\n        values={{ numExperiments }}\n      />\n    );\n  }\n\n  getExperimentPageLink() {\n    const { comparedExperimentIds, hasComparedExperimentsBefore, experimentIds, experiments } = this.props;\n\n    if (hasComparedExperimentsBefore && comparedExperimentIds) {\n      const text = this.getCompareExperimentsPageLinkText(comparedExperimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(comparedExperimentIds)}>{text}</Link>;\n    }\n\n    if (this.hasMultipleExperiments()) {\n      const text = this.getCompareExperimentsPageLinkText(experimentIds.length);\n      return <Link to={Routes.getCompareExperimentsPageRoute(experimentIds)}>{text}</Link>;\n    }\n\n    return <Link to={Routes.getExperimentPageRoute(experimentIds[0])}>{experiments[0].name}</Link>;\n  }\n\n  render() {\n    const { experimentIds, runUuids, metricKey, location } = this.props;\n    const { selectedMetricKeys } = Utils.getMetricPlotStateFromUrl(location.search);\n    const title =\n      selectedMetricKeys.length > 1 ? (\n        <FormattedMessage defaultMessage=\"Metrics\" description=\"Title for metrics page\" />\n      ) : (\n        selectedMetricKeys[0]\n      );\n    const breadcrumbs = [this.getExperimentPageLink(), this.getRunPageLink()];\n    return (\n      <div>\n        <PageHeader title={title} breadcrumbs={breadcrumbs} hideSpacer />\n        <MetricsPlotPanel {...{ experimentIds, runUuids, metricKey }} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const { comparedExperimentIds, hasComparedExperimentsBefore } = state.compareExperiments;\n  const { experimentIds, runUuids } = ownProps;\n  const experiments =\n    experimentIds !== null ? experimentIds.map((experimentId: any) => getExperiment(experimentId, state)) : null;\n  const runNames = runUuids.map((runUuid: any) => {\n    const runInfo = getRunInfo(runUuid, state);\n    return Utils.getRunDisplayName(runInfo, runUuid);\n  });\n  return { experiments, runNames, comparedExperimentIds, hasComparedExperimentsBefore };\n};\n\nexport const MetricView = withRouterNext(connect(mapStateToProps)(MetricViewImpl));\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { getExperimentApi, getRunApi } from '../actions';\nimport RequestStateWrapper from '../../common/components/RequestStateWrapper';\nimport NotFoundPage from './NotFoundPage';\nimport { MetricView } from './MetricView';\nimport { getUUID } from '../../common/utils/ActionUtils';\nimport { PageContainer } from '../../common/components/PageContainer';\nimport { withRouterNext } from '../../common/utils/withRouterNext';\nimport type { WithRouterNextProps } from '../../common/utils/withRouterNext';\nimport { withErrorBoundary } from '../../common/utils/withErrorBoundary';\nimport ErrorUtils from '../../common/utils/ErrorUtils';\nimport Utils from '../../common/utils/Utils';\nimport { FormattedMessage, injectIntl, type IntlShape } from 'react-intl';\nimport { ErrorWrapper } from '../../common/utils/ErrorWrapper';\nimport { DangerIcon, Empty } from '@databricks/design-system';\n\ntype MetricPageImplProps = {\n  runUuids: string[];\n  metricKey: string;\n  experimentIds?: string[];\n  dispatch: (...args: any[]) => any;\n  loadError?: unknown;\n  intl: IntlShape;\n};\n\nexport class MetricPageImpl extends Component<MetricPageImplProps> {\n  requestIds: any;\n\n  constructor(props: MetricPageImplProps) {\n    super(props);\n    this.requestIds = [];\n  }\n\n  fetchExperiments() {\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    return this.props.experimentIds.map((experimentId) => {\n      const experimentRequestId = getUUID();\n      this.props.dispatch(getExperimentApi(experimentId, experimentRequestId)).catch((e: Error | ErrorWrapper) => {\n        if (e instanceof ErrorWrapper) {\n          // Async API errors are handled by the RequestStateWrapper\n          return;\n        }\n        throw e;\n      });\n      return experimentRequestId;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.loadError instanceof Error) {\n      const message = this.props.intl.formatMessage({\n        defaultMessage: 'Error during metric page load: invalid URL',\n        description: 'Error message when loading metric page fails',\n      });\n      throw new Error(message);\n    }\n    if (this.props.experimentIds !== null) {\n      const getExperimentsRequestIds = this.fetchExperiments();\n      this.requestIds.push(...getExperimentsRequestIds);\n    }\n    this.props.runUuids.forEach((runUuid) => {\n      // Fetch tags for each run. TODO: it'd be nice if we could just fetch the tags directly\n      const getRunRequestId = getUUID();\n      this.requestIds.push(getRunRequestId);\n      this.props.dispatch(getRunApi(runUuid, getRunRequestId)).catch((e: Error | ErrorWrapper) => {\n        if (e instanceof ErrorWrapper) {\n          // Async API errors are handled by the RequestStateWrapper\n          return;\n        }\n        throw e;\n      });\n    });\n  }\n\n  renderPageContent() {\n    const { runUuids } = this.props;\n    return runUuids.length >= 1 ? (\n      <MetricView\n        runUuids={this.props.runUuids}\n        metricKey={this.props.metricKey}\n        experimentIds={this.props.experimentIds}\n      />\n    ) : (\n      <NotFoundPage />\n    );\n  }\n\n  render() {\n    return (\n      <PageContainer>\n        <RequestStateWrapper\n          requestIds={this.requestIds}\n          // eslint-disable-next-line no-trailing-spaces\n          customRequestErrorHandlerFn={(failedRequests) => {\n            const firstFoundError = failedRequests.find((request) => request.error)?.error;\n            if (firstFoundError instanceof ErrorWrapper) {\n              // Extract and throw actual Error based on the ErrorWrapper\n              throw firstFoundError.translateToErrorInstance();\n            }\n            if (firstFoundError) {\n              throw firstFoundError;\n            }\n          }}\n        >\n          {this.renderPageContent()}\n        </RequestStateWrapper>\n      </PageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: WithRouterNextProps<{ metricKey: string }>) => {\n  const { location } = ownProps;\n  const searchValues = qs.parse(location.search);\n  try {\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const runUuids = JSON.parse(searchValues['?runs']);\n    // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n    const metricKey = JSON.parse(searchValues['metric']);\n    let experimentIds = null;\n    if (searchValues.hasOwnProperty('experiments')) {\n      // @ts-expect-error TS(2345): Argument of type 'string | string[] | ParsedQs | P... Remove this comment to see the full error message\n      experimentIds = JSON.parse(searchValues['experiments']);\n    }\n\n    return {\n      runUuids,\n      metricKey,\n      experimentIds,\n    };\n  } catch (e) {\n    return {\n      runUuids: [],\n      metricKey: '',\n      experimentIds: [],\n      loadError: e,\n    };\n  }\n};\n\nconst MetricPageWithRouter = withRouterNext(connect(mapStateToProps)(injectIntl(MetricPageImpl)));\n\nconst MetricPageErrorPage = ({ error }: { error: Error }) => (\n  <div css={{ height: '100%', alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n    <Empty\n      title={\n        <FormattedMessage\n          defaultMessage=\"Error while loading metric page\"\n          description=\"Title of the error state on the metric page\"\n        />\n      }\n      description={error.message}\n      image={<DangerIcon />}\n    />\n  </div>\n);\n\nexport const MetricPage = withErrorBoundary(\n  ErrorUtils.mlflowServices.EXPERIMENTS,\n  MetricPageWithRouter,\n  undefined,\n  MetricPageErrorPage,\n);\n\nexport default MetricPage;\n","import spinner from '../static/mlflow-spinner.png';\nimport { Interpolation, keyframes, Theme } from '@emotion/react';\n\ntype Props = {\n  showImmediately?: boolean;\n};\n\nexport function Spinner({ showImmediately }: Props) {\n  return (\n    <div css={(theme) => styles.spinner(theme, showImmediately)}>\n      <img alt=\"Page loading...\" src={spinner} />\n    </div>\n  );\n}\n\nconst styles = {\n  spinner: (theme: Theme, immediate?: boolean): Interpolation<Theme> => ({\n    width: 100,\n    marginTop: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n\n    img: {\n      position: 'absolute',\n      opacity: 0,\n      top: '50%',\n      left: '50%',\n      width: theme.general.heightBase * 2,\n      height: theme.general.heightBase * 2,\n      marginTop: -theme.general.heightBase,\n      marginLeft: -theme.general.heightBase,\n      animation: `${keyframes`\n          0% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 1;\n            -webkit-transform: rotate(360deg);\n                transform: rotate(360deg);\n            }\n          `} 3s linear infinite`,\n      animationDelay: immediate ? '0s' : '0.5s',\n    },\n  }),\n};\n"],"names":["ErrorFallback","_jsx","Empty","title","FormattedMessage","id","defaultMessage","description","image","DangerIcon","CustomErrorBoundary","_ref","children","customFallbackComponent","logErrorToConsole","error","info","console","componentStack","ErrorBoundary","onError","FallbackComponent","fallback","withErrorBoundary","service","Component","errorMessage","props","withRouterNext","location","useLocation","navigate","useNavigate","params","useParams","SectionErrorBoundary","React","constructor","arguments","state","componentDidCatch","errorInfo","this","setState","renderErrorMessage","showServerError","_jsxs","message","render","className","css","classNames","wrapper","href","Utils","getSupportPageUrl","target","marginLeft","$ebb31c7feaa4405e$export$b16d9fb1a22de840","$hgUW1$createContext","$44d7e150ebc754d2$var$initialState","didCatch","$44d7e150ebc754d2$export$e926676385687eaf","$hgUW1$Component","getDerivedStateFromError","resetErrorBoundary","_this","_len","length","args","Array","_key","onReset","reason","componentDidUpdate","prevProps","prevState","resetKeys","a","undefined","b","some","item","index","Object","is","$44d7e150ebc754d2$var$hasArrayChanged","next","prev","fallbackRender","childToRender","$hgUW1$isValidElement","Error","$hgUW1$createElement","Provider","value","$75c9d331f9c1ed1a$export$f20aa86254872370","$7c3c25b3f398a9d6$export$c052f6604b7d51fe","context","$hgUW1$useContext","$hgUW1$useState","hasError","memoized","$hgUW1$useMemo","resetBoundary","showBoundary","$62ff477d53f02a5b$export$f0c7a449e0cfaec7","errorBoundaryProps","Wrapped","name","displayName","PreviewBadge","theme","useDesignSystemTheme","Tag","componentId","_css","spacing","xs","color","PageContainer","usesFullHeight","restProps","PageWrapper","styles","useFullHeightLayout","Spacer","fixedSpacer","container","defaultProps","height","display","flexDirection","flexGrow","flex","flexShrink","width","paddingBottom","RequestStateWrapper","shouldRender","shouldRenderError","getErrorRequests","requests","requestIdsWith404sToIgnore","filter","r","includes","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","getDerivedStateFromProps","nextProps","every","active","requestErrors","getRenderedContent","customSpinner","permissionDeniedView","suppressErrorThrow","customRequestErrorHandlerFn","permissionDeniedErrors","failedRequest","PERMISSION_DENIED","shouldOptimisticallyRender","triggerError","Spinner","connect","mapStateToProps","ownProps","getApis","requestIds","ErrorUtils","mlflowServices","MODEL_REGISTRY","EXPERIMENTS","MODEL_SERVING","RUN_TRACKING","mapErrorWrapperToPredefinedError","errorWrapper","requestId","ErrorWrapper","status","networkErrorDetails","NotFoundError","PermissionError","INTERNAL_ERROR","InternalServerError","INVALID_PARAMETER_VALUE","BadRequestError","messageFromErrorWrapper","getMessageField","NotFoundPage","OverflowMenu","menu","overflowMenu","Menu","map","_ref2","itemName","onClick","otherProps","Item","Dropdown","overlay","trigger","placement","arrow","Button","icon","OverflowIcon","_ref3","PageHeader","breadcrumbs","titleAddOns","preview","spacerSize","hideSpacer","dangerouslyAppendEmotionCSS","useIntl","_Fragment","Header","Breadcrumb","includeTrailingCaret","i","buttons","size","MetricViewImpl","getCompareRunsPageText","numRuns","numExperiments","values","hasMultipleExperiments","experimentIds","getRunPageLink","runUuids","runNames","Link","to","Routes","getRunPageRoute","text","getCompareRunPageRoute","getCompareExperimentsPageLinkText","getExperimentPageLink","comparedExperimentIds","hasComparedExperimentsBefore","experiments","getCompareExperimentsPageRoute","getExperimentPageRoute","metricKey","selectedMetricKeys","getMetricPlotStateFromUrl","search","MetricsPlotPanel","MetricView","compareExperiments","experimentId","getExperiment","runUuid","runInfo","getRunInfo","getRunDisplayName","MetricPageImpl","super","fetchExperiments","experimentRequestId","getUUID","dispatch","getExperimentApi","catch","e","componentDidMount","loadError","intl","formatMessage","getExperimentsRequestIds","push","forEach","getRunRequestId","getRunApi","renderPageContent","failedRequests","_failedRequests$find","firstFoundError","find","request","translateToErrorInstance","MetricPageWithRouter","searchValues","qs","JSON","parse","hasOwnProperty","injectIntl","MetricPage","showImmediately","spinner","alt","src","immediate","marginTop","marginRight","img","position","opacity","top","left","general","heightBase","animation","keyframes","animationDelay"],"sourceRoot":""}